{"version":3,"sources":["connectors.js","hooks.js","components/ConnectButton.js","components/Account.js","components/Balance.js","components/Wallet.js","components/OffCanvasInfo.js","components/Navigation.js","components/NotConnected.js","components/Counter.js","App.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","console","ConnectButton","activate","useWeb3React","Button","variant","onClick","Account","account","substring","length","Balance","library","chainId","useState","balance","setBalance","useEffect","stale","eth","getBalance","then","catch","undefined","role","utils","fromWei","style","color","Wallet","className","OffCanvasInfo","show","setShow","Offcanvas","onHide","placement","Header","closeButton","Title","Body","styles","Navigation","active","Navbar","bg","Container","Brand","Toggle","Text","NotConnected","type","textDecoration","href","target","rel","Counter","counter","setCounter","loadingIncrement","setLoadingIncrement","loadingDecrement","setLoadingDecrement","contract","Contract","CounterABI","abi","interval","setInterval","methods","call","result","log","clearInterval","Spinner","as","animation","size","increment","send","decrement","App","context","triedEager","tried","setTried","isAuthorized","useEagerConnect","suppress","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","Stack","gap","Row","Col","sm","Alert","ReactDOM","render","getLibrary","provider","Web3","document","getElementById"],"mappings":"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","file":"static/js/main.0d2a70ed.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\nconst local = 1337\r\nconst bsc_testnet = 97\r\nexport const injected = new InjectedConnector(\r\n    {\r\n        supportedChainIds: [bsc_testnet]\r\n    }\r\n)","import { useState, useEffect } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\n\r\nimport { injected } from './connectors'\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        setTried(true)\r\n      }\r\n    })\r\n  }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\")\r\n        activate(injected)\r\n      }\r\n      const handleChainChanged = (chainId) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n        activate(injected)\r\n      }\r\n      const handleAccountsChanged = (accounts) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n        if (accounts.length > 0) {\r\n          activate(injected)\r\n        }\r\n      }\r\n      const handleNetworkChanged = (networkId) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n        activate(injected)\r\n      }\r\n\r\n      ethereum.on('connect', handleConnect)\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n      ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect)\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n        }\r\n      }\r\n    }\r\n  }, [active, error, suppress, activate])\r\n}\r\n\r\nexport function getErrorMessage(error){\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n","import {Button} from 'react-bootstrap'\r\nimport { useWeb3React } from \"@web3-react/core\"\r\nimport { injected } from '../connectors'\r\n\r\nconst ConnectButton = () => {\r\n    const {activate} = useWeb3React()\r\n    return(\r\n        <>\r\n          <Button variant=\"outline-warning\" onClick={() => { activate(injected) }}>Connect</Button>\r\n        </>\r\n    )\r\n}\r\nexport default ConnectButton","import { useWeb3React } from \"@web3-react/core\"\r\n\r\n\r\nconst Account = () => {\r\n    const {account} = useWeb3React()\r\n\r\n    return(\r\n        <>\r\n            <span>\r\n                {\r\n                    account === null\r\n                        ? '-'\r\n                        : account\r\n                            ? `${account.substring(0,6)}...${account.substring(account.length -4)}`\r\n                            : ''\r\n                }\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Account","import { useWeb3React } from \"@web3-react/core\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst Balance = () => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [balance, setBalance] = useState()\r\n    useEffect(() => {\r\n        if (!!account && !!library) {\r\n            let stale = false\r\n\r\n            library\r\n                .eth\r\n                .getBalance(account)\r\n                .then((balance) => {\r\n                    if (!stale) {\r\n                        setBalance(balance)\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    if (!stale) {\r\n                        setBalance(null)\r\n                    }\r\n                })\r\n\r\n            return () => {\r\n                stale = true\r\n                setBalance(undefined)\r\n            }\r\n        }\r\n    }, [account, library, chainId])\r\n    return (\r\n        <>\r\n            <span>Balance</span>\r\n            <span role=\"img\" aria-label=\"gold\">\r\n                💰\r\n            </span>\r\n            \r\n            <span>{balance === null ? 'Error' : balance ? `Ξ${library.utils.fromWei(balance)}` : ''}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance","import Account from \"./Account\"\r\nimport Balance from \"./Balance\"\r\n\r\nconst style ={\r\n    color:'',\r\n    \r\n}\r\n\r\nconst Wallet = () => {\r\n\r\n    return(\r\n        <p style={style} className='my-auto'>\r\n            <span><Account/> - <Balance/></span>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Wallet","import {Button, Offcanvas} from 'react-bootstrap'\r\nimport { useState } from 'react';\r\n\r\nimport Account from './Account';\r\nimport Wallet from './Wallet';\r\n\r\nconst OffCanvasInfo = () => {\r\n    \r\n\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n      <>\r\n        <Button variant=\"outline-success\" onClick={handleShow}>\r\n          <Account/>\r\n        </Button>\r\n  \r\n        <Offcanvas show={show} onHide={handleClose} placement='end'>\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>DApp Info</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            <Wallet/>\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default OffCanvasInfo","import { useWeb3React } from '@web3-react/core';\r\nimport { Container, Navbar } from 'react-bootstrap';\r\nimport ConnectButton from './ConnectButton';\r\nimport OffCanvasInfo from './OffCanvasInfo';\r\n\r\n\r\nconst styles = {\r\n\r\n}\r\n\r\nconst Navigation = () => {\r\n    const { active } = useWeb3React()\r\n    return (\r\n        <Navbar bg='dark' variant='dark' style={styles}>\r\n            <Container >\r\n                <Navbar.Brand>Counter App</Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Text>\r\n                    {active\r\n                        ? <OffCanvasInfo/>\r\n                        : <ConnectButton />\r\n                    }\r\n                </Navbar.Text>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation","\r\nconst NotConnected = () => {\r\n    return (\r\n        <>\r\n            <div className=\"px-4 py-5 my-5 text-center\">                \r\n                <h1 className =\"display-5 fw-bold\">Metamask  is mandatory for this app</h1>\r\n                <div className =\"col-lg-6 mx-auto\">\r\n                <p className =\"lead mb-4\">This application needs Metamask installed and BSC Testnet chain configured.</p>\r\n                <div className =\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\r\n                <button type =\"button\" className =\"btn btn-primary btn-lg px-4 gap-3\"><a style={{color:'inherit',textDecoration:'none'}} href='https://metamask.io/' target='_blank' rel='noreferrer'>Install Metamask</a></button>\r\n                <button type =\"button\" className =\"btn btn-warning btn-lg px-4 gap-3\"><a style={{color:'inherit',textDecoration:'none'}} href='https://docs.binance.org/smart-chain/developer/rpc.html' target='_blank' rel='noreferrer'>BSC Testnet Info</a></button>\r\n                \r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NotConnected","\r\nimport { Button, Spinner } from 'react-bootstrap'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useEffect, useState } from 'react'\r\nimport CounterABI from '../contracts/Counter.json'\r\n\r\nconst Counter = () => {\r\n    const { account, library, chainId } = useWeb3React()\r\n    const [counter, setCounter] = useState()\r\n    const [loadingIncrement, setLoadingIncrement] = useState()\r\n    const [loadingDecrement, setLoadingDecrement] = useState()\r\n    const contract = new library.eth.Contract(\r\n        CounterABI.abi,\r\n        '0x66AB20b324361B51fF4745E8E381DD8e2cFcDD3d'\r\n    )\r\n\r\n    useEffect(() => {\r\n\r\n        const interval = setInterval(() => {\r\n            contract.methods.counter().call()\r\n                .then(result => {\r\n                    setCounter(result)\r\n                })\r\n                .catch(error =>{\r\n                    console.log(error)\r\n                })\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    const handleIncrement = () => {\r\n        setLoadingIncrement(true)\r\n        contract.methods.increment().send({ 'from': account })\r\n            .then(result => {\r\n                console.log(result)\r\n                setLoadingIncrement(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setLoadingIncrement(false)\r\n            })\r\n        \r\n    }\r\n    const handleDecrement = () => {\r\n        setLoadingDecrement(true)\r\n        contract.methods.decrement().send({ 'from': account })\r\n            .then(result => {\r\n                console.log(result)\r\n                setLoadingDecrement(false)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                setLoadingDecrement(false)\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"px-4 py-5 my-5 text-center\">\r\n                <h1 className=\"display-5 fw-bold\">Counter</h1>\r\n                <p className='display-3'>\r\n                    {counter}\r\n                </p>\r\n                <div className='d-grid gap-2 d-sm-flex justify-content-sm-center'>\r\n                    {loadingIncrement\r\n                        ?\r\n                        <Button variant='success' className=' btn-lg px-4 gap-3'>\r\n                            <Spinner as='span' animation='border' size='sm' role='status' aria-hidden='true' />\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={handleIncrement} variant='success' className=' btn-lg px-4 gap-3'>\r\n                            Increment\r\n                        </Button>\r\n                    }\r\n                    {loadingDecrement\r\n                        ?\r\n                        <Button variant='danger' className=' btn-lg px-4 gap-3'>\r\n                            <Spinner as='span' animation='border' size='sm' role='status' aria-hidden='true' />\r\n                        </Button>\r\n                        :\r\n                        <Button onClick={handleDecrement} variant='danger' className=' btn-lg px-4 gap-3'>Decrement</Button>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Counter","//Hooks\nimport { useEagerConnect, useInactiveListener ,getErrorMessage} from './hooks'\n\n// Web3 React\nimport { useWeb3React} from \"@web3-react/core\";\n\n//Bootstrap\nimport { Col, Container, Row, Stack , Alert } from \"react-bootstrap\";\n//Components\nimport Navigation from \"./components/Navigation\";\nimport NotConnected from \"./components/NotConnected\";\nimport Counter from './components/Counter';\n\nfunction App() {\n\n  const context = useWeb3React()\n  const { active, error } = context\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager)\n\n\n  return (\n    <Stack gap={4}>\n      <Navigation/>\n      \n      <Container>\n        <Row>\n          <Col sm={12}>{error ? <Alert className='text-center' variant='danger'>{getErrorMessage(error)}</Alert>  : ''}</Col>\n        </Row>\n        <Row>\n        \n        \n        {active \n          ? <>\n          <Counter/>\n          </>\n          : <NotConnected/>\n        }\n        </Row>\n      </Container>\n    </Stack>\n  );\n}\n\nexport default App;\n","//React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport \"bootswatch/dist/vapor/bootstrap.min.css\"\n\n//Web3\nimport { Web3ReactProvider } from '@web3-react/core'\nimport Web3 from 'web3';\n\nfunction getLibrary(provider){\n  const library = new Web3(provider)\n  return library\n}\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <App />\n  </Web3ReactProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}